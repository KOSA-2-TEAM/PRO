package com.example._team.service;

import com.example._team.domain.TravelBoard;
import com.example._team.domain.Users;
import com.example._team.dto.TravelBoardDTO;
import com.example._team.exception.DataNotFoundException;
import com.example._team.repository.TravelBoardRepository;
import com.example._team.repository.UsersRepository;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

@Service
public class TravelBoardService {

    @Autowired
    private TravelBoardRepository travelBoardRepository;
    
    @Autowired
    private UsersRepository usersRepository; // UsersRepository 추가

    public TravelBoardDTO createTravelBoard(TravelBoardDTO dto) {
        TravelBoard travelBoard = new TravelBoard();
        travelBoard.setTitle(dto.getTitle());
        travelBoard.setContent(dto.getContent());
        travelBoard.setRegion(dto.getRegion());
        travelBoard.setStatDate(dto.getStatDate());
        travelBoard.setEndDate(dto.getEndDate());
        travelBoard.setIsPublic(dto.getIsPublic());
        
        Users user = usersRepository.findById(dto.getUserIdx().getUserIdx())
                .orElseThrow(() -> new DataNotFoundException("User not found with id: " + dto.getUserIdx().getUserIdx()));
        travelBoard.setUserIdx(user);
        
        return toDTO(travelBoardRepository.save(travelBoard));
    }

    public TravelBoardDTO getTravelBoard(Integer id) {
        TravelBoard travelBoard = travelBoardRepository.findById(id)
                .orElseThrow(() -> new DataNotFoundException("TravelBoard not found with id: " + id));
        return toDTO(travelBoard);
    }

    public TravelBoardDTO updateTravelBoard(Integer id, TravelBoardDTO dto) {
        TravelBoard travelBoard = travelBoardRepository.findById(id)
                .orElseThrow(() -> new DataNotFoundException("TravelBoard not found with id: " + id));
        travelBoard.setTitle(dto.getTitle());
        travelBoard.setContent(dto.getContent());
        travelBoard.setRegion(dto.getRegion());
        travelBoard.setStatDate(dto.getStatDate());
        travelBoard.setEndDate(dto.getEndDate());
        travelBoard.setIsPublic(dto.getIsPublic());

        Users user = usersRepository.findById(dto.getUserIdx().getUserIdx())
                .orElseThrow(() -> new DataNotFoundException("User not found with id: " + dto.getUserIdx().getUserIdx()));
        travelBoard.setUserIdx(user);
        
        return toDTO(travelBoardRepository.save(travelBoard));
    }

    public void deleteTravelBoard(Integer id) {
        if (!travelBoardRepository.existsById(id)) {
            throw new DataNotFoundException("TravelBoard not found with id: " + id);
        }
        travelBoardRepository.deleteById(id);
    }

    private TravelBoardDTO toDTO(TravelBoard travelBoard) {
        return new TravelBoardDTO(
                travelBoard.getTravelIdx(),
                travelBoard.getTitle(),
                travelBoard.getContent(),
                travelBoard.getRegion(),
                travelBoard.getStatDate(),
                travelBoard.getEndDate(),
                travelBoard.getIsPublic(),
                travelBoard.getUserIdx()
        );
    }
}


//package com.example._team.service;
//
//import com.example._team.domain.TravelBoard;
//import com.example._team.dto.TravelBoardDTO;
//import com.example._team.repository.TravelBoardRepository;
//import org.springframework.beans.factory.annotation.Autowired;
//import org.springframework.stereotype.Service;
//
//import java.util.List;
//import java.util.Optional;
//
//@Service
//public class TravelBoardService {
//
//    @Autowired
//    private TravelBoardRepository travelBoardRepository;
//
//    public List<TravelBoard> getAllTravelBoards() {
//        return travelBoardRepository.findAll();
//    }
//
//    public Optional<TravelBoard> getTravelBoardById(Integer id) {
//        return travelBoardRepository.findById(id);
//    }
//
//    public TravelBoard createTravelBoard(TravelBoardDTO dto) {
//        TravelBoard travelBoard = new TravelBoard();
//        travelBoard.setTitle(dto.getTitle());
//        travelBoard.setContent(dto.getContent());
//        travelBoard.setRegion(dto.getRegion());
//        travelBoard.setStatDate(dto.getStatDate());
//        travelBoard.setEndDate(dto.getEndDate());
//        travelBoard.setIsPublic(dto.getIsPublic());
//        // userIdx와 연관된 User 엔티티 설정 필요
//        // travelBoard.setUserIdx(user); 
//        return travelBoardRepository.save(travelBoard);
//    }
//
//    public TravelBoard updateTravelBoard(Integer id, TravelBoardDTO dto) {
//        TravelBoard travelBoard = travelBoardRepository.findById(id)
//                .orElseThrow(() -> new RuntimeException("TravelBoard not found"));
//        travelBoard.setTitle(dto.getTitle());
//        travelBoard.setContent(dto.getContent());
//        travelBoard.setRegion(dto.getRegion());
//        travelBoard.setStatDate(dto.getStatDate());
//        travelBoard.setEndDate(dto.getEndDate());
//        travelBoard.setIsPublic(dto.getIsPublic());
//        // userIdx와 연관된 User 엔티티 설정 필요
//        // travelBoard.setUserIdx(user);
//        return travelBoardRepository.save(travelBoard);
//    }
//
//    public void deleteTravelBoard(Integer id) {
//        travelBoardRepository.deleteById(id);
//    }
//}


//package com.example._team.service;
//
//import com.example._team.domain.TravelBoard;
//import com.example._team.dto.TravelBoardDTO;
//import com.example._team.exception.DataNotFoundException;
//import com.example._team.repository.TravelBoardRepository;
//import org.springframework.beans.factory.annotation.Autowired;
//import org.springframework.stereotype.Service;
//
//import java.time.LocalDateTime;
//import java.util.Optional;
//
//@Service
//public class TravelBoardService {
//
//    @Autowired
//    private TravelBoardRepository travelBoardRepository;
//
//    public TravelBoardDTO createTravelBoard(TravelBoardDTO travelBoardDTO) {
//        TravelBoard travelBoard = new TravelBoard();
//        travelBoard.setTitle(travelBoardDTO.getTitle());
//        travelBoard.setContent(travelBoardDTO.getContent());
//        travelBoard.setCreatedAt(LocalDateTime.now());
//        travelBoard.setUpdatedAt(LocalDateTime.now());
//
//        travelBoard = travelBoardRepository.save(travelBoard);
//
//        return convertToDTO(travelBoard);
//    }
//
//    public TravelBoardDTO getTravelBoardById(Integer travelIdx) {
//        TravelBoard travelBoard = travelBoardRepository.findById(travelIdx)
//                .orElseThrow(() -> new DataNotFoundException("TravelBoard not found with id: " + travelIdx));
//        return convertToDTO(travelBoard);
//    }
//
//    public TravelBoardDTO updateTravelBoard(Integer travelIdx, TravelBoardDTO travelBoardDTO) {
//        TravelBoard existingTravelBoard = travelBoardRepository.findById(travelIdx)
//                .orElseThrow(() -> new DataNotFoundException("TravelBoard not found with id: " + travelIdx));
//        
//        existingTravelBoard.setTitle(travelBoardDTO.getTitle());
//        existingTravelBoard.setContent(travelBoardDTO.getContent());
//        existingTravelBoard.setUpdatedAt(LocalDateTime.now());
//
//        existingTravelBoard = travelBoardRepository.save(existingTravelBoard);
//
//        return convertToDTO(existingTravelBoard);
//    }
//
//    public void deleteTravelBoard(Integer travelIdx) {
//        if (!travelBoardRepository.existsById(travelIdx)) {
//            throw new DataNotFoundException("TravelBoard not found with id: " + travelIdx);
//        }
//        travelBoardRepository.deleteById(travelIdx);
//    }
//
//    private TravelBoardDTO convertToDTO(TravelBoard travelBoard) {
//        return new TravelBoardDTO(
//            travelBoard.getTravelIdx(),
//            travelBoard.getTitle(),
//            travelBoard.getContent(),
//            travelBoard.getCreatedAt(),
//            travelBoard.getUpdatedAt()
//        );
//    }
//}




//package com.example._team.service;
//
//import com.example._team.domain.TravelBoard;
//import com.example._team.dto.TravelBoardDTO;
//import com.example._team.repository.TravelBoardRepository;
//import org.springframework.beans.factory.annotation.Autowired;
//import org.springframework.stereotype.Service;
//
//import java.util.List;
//import java.util.Optional;
//import java.util.stream.Collectors;
//
//@Service
//public class TravelBoardService {
//
//    @Autowired
//    private TravelBoardRepository travelBoardRepository;
//
//    // 모든 여행 보드 조회
//    public List<TravelBoardDTO> getAllBoards() {
//        return travelBoardRepository.findAll().stream()
//                .map(this::convertToDto)
//                .collect(Collectors.toList());
//    }
//
//    // 특정 여행 보드 조회 (ID로 식별)
//    public Optional<TravelBoardDTO> getBoardByTravelIdx(Integer travelIdx) {
//        return travelBoardRepository.findByTravelIdx(travelIdx)
//                .map(this::convertToDto);
//    }
//
//    // 여행 보드 생성 또는 수정
//    public TravelBoardDTO createOrUpdateBoard(TravelBoardDTO boardDTO) {
//        TravelBoard board = convertToEntity(boardDTO);
//        TravelBoard savedBoard = travelBoardRepository.save(board);
//        return convertToDto(savedBoard);
//    }
//
//    // 특정 여행 보드 수정
//    public TravelBoardDTO updateBoard(Integer travelIdx, TravelBoardDTO boardDTO) {
//        TravelBoard board = convertToEntity(boardDTO);
//        board.setTravelIdx(travelIdx);
//        TravelBoard updatedBoard = travelBoardRepository.save(board);
//        return convertToDto(updatedBoard);
//    }
//
//    // 특정 여행 보드 삭제
//    public void deleteBoardByTravelIdx(Integer travelIdx) {
//        travelBoardRepository.findByTravelIdx(travelIdx)
//                .ifPresent(board -> travelBoardRepository.deleteById(board.getTravelIdx()));
//    }
//
//    // 엔티티를 DTO로 변환
//    private TravelBoardDTO convertToDto(TravelBoard board) {
//        TravelBoardDTO dto = new TravelBoardDTO();
//        dto.setTravelIdx(board.getTravelIdx());
//        dto.setTitle(board.getTitle());
//        dto.setContent(board.getContent());
//        dto.setRegion(board.getRegion());
//        dto.setStatDate(board.getStatDate());
//        dto.setEndDate(board.getEndDate());
//        dto.setIsPublic(board.getIsPublic());
//        dto.setUserIdx(board.getUserIdx() != null ? board.getUserIdx().getUserIdx() : null);
//        return dto;
//    }
//
//    // DTO를 엔티티로 변환
//    private TravelBoard convertToEntity(TravelBoardDTO dto) {
//        TravelBoard board = new TravelBoard();
//        board.setTravelIdx(dto.getTravelIdx()); // travelIdx는 필요 시 설정
//        board.setTitle(dto.getTitle());
//        board.setContent(dto.getContent());
//        board.setRegion(dto.getRegion());
//        board.setStatDate(dto.getStatDate());
//        board.setEndDate(dto.getEndDate());
//        board.setIsPublic(dto.getIsPublic());
//        // userIdx는 Users 엔티티에서 따로 설정해야 할 수 있음 (생략)
//        return board;
//    }
//}






//package com.example._team.service;
//
//import com.example._team.domain.TravelBoard;
//import com.example._team.dto.TravelBoardDTO;
//import com.example._team.repository.TravelBoardRepository;
//import org.springframework.beans.factory.annotation.Autowired;
//import org.springframework.stereotype.Service;
//
//import java.util.List;
//import java.util.Optional;
//import java.util.stream.Collectors;
//
//@Service
//public class TravelBoardService {
//
//    @Autowired
//    private TravelBoardRepository travelBoardRepository;
//
//    // 모든 여행 보드 조회
//    public List<TravelBoardDTO> getAllBoards() {
//        return travelBoardRepository.findAll().stream()
//                .map(this::convertToDto)  // 엔티티 -> DTO 변환
//                .collect(Collectors.toList());
//    }
//
//    // 특정 여행 보드 조회 (ID로 식별)
//    public Optional<TravelBoardDTO> getBoardByTravelIdx(Integer travelIdx) {
//        return travelBoardRepository.findByTravelIdx(travelIdx)
//                .map(this::convertToDto);  // 엔티티 -> DTO 변환
//    }
//
//    // 여행 보드 생성 또는 수정
//    public TravelBoardDTO createOrUpdateBoard(TravelBoardDTO boardDTO) {
//        TravelBoard board = convertToEntity(boardDTO);  // DTO -> 엔티티 변환
//        TravelBoard savedBoard = travelBoardRepository.save(board);
//        return convertToDto(savedBoard);  // 저장된 엔티티 -> DTO 변환
//    }
//
//    // 특정 여행 보드 수정
//    public TravelBoardDTO updateBoard(Integer travelIdx, TravelBoardDTO boardDTO) {
//        TravelBoard board = convertToEntity(boardDTO);  // DTO -> 엔티티 변환
//        board.setTravelIdx(travelIdx);  // 기존 게시판 ID 유지
//        TravelBoard updatedBoard = travelBoardRepository.save(board);
//        return convertToDto(updatedBoard);  // 엔티티 -> DTO 변환
//    }
//
//    // 특정 여행 보드 삭제
//    public void deleteBoardByTravelIdx(Integer travelIdx) {
//        travelBoardRepository.findByTravelIdx(travelIdx)
//                .ifPresent(board -> travelBoardRepository.deleteById(board.getTravelIdx()));
//    }
//
//    // 엔티티를 DTO로 변환
//    private TravelBoardDTO convertToDto(TravelBoard board) {
//        TravelBoardDTO dto = new TravelBoardDTO();
//        dto.setTravelIdx(board.getTravelIdx());
//        dto.setTitle(board.getTitle());
//        dto.setContent(board.getContent());
//        dto.setRegion(board.getRegion());
//        dto.setStatDate(board.getStatDate());
//        dto.setEndDate(board.getEndDate());
//        dto.setIsPublic(board.getIsPublic());
//        dto.setUserIdx(board.getUserIdx() != null ? board.getUserIdx().getUserIdx() : null);
//        return dto;
//    }
//
//    // DTO를 엔티티로 변환
//    private TravelBoard convertToEntity(TravelBoardDTO dto) {
//        TravelBoard board = new TravelBoard();
//        board.setTravelIdx(dto.getTravelIdx());  // travelIdx는 필요 시 설정
//        board.setTitle(dto.getTitle());
//        board.setContent(dto.getContent());
//        board.setRegion(dto.getRegion());
//        board.setStatDate(dto.getStatDate());
//        board.setEndDate(dto.getEndDate());
//        board.setIsPublic(dto.getIsPublic());
//        // userIdx는 Users 엔티티에서 따로 설정해야 할 수 있음 (생략)
//        return board;
//    }
//}


//package com.example._team.service;
//
//import com.example._team.domain.TravelBoard;
//import com.example._team.dto.TravelBoardDTO;
//import com.example._team.repository.TravelBoardRepository;
//import org.springframework.beans.factory.annotation.Autowired;
//import org.springframework.stereotype.Service;
//
//import java.util.List;
//import java.util.Optional;
//import java.util.stream.Collectors;
//
//@Service
//public class TravelBoardService {
//
//    @Autowired
//    private TravelBoardRepository travelBoardRepository;
//
//    // 모든 여행 보드 조회
//    public List<TravelBoardDTO> getAllBoards() {
//        return travelBoardRepository.findAll().stream()
//                .map(this::convertToDto)  // 엔티티 -> DTO 변환
//                .collect(Collectors.toList());
//    }
//
//    // 특정 여행 보드 조회 (ID로 식별)
//    public Optional<TravelBoardDTO> getBoardByTravelIdx(Integer travelIdx) {
//        return travelBoardRepository.findByTravelIdx(travelIdx)
//                .map(this::convertToDto);  // 엔티티 -> DTO 변환
//    }
//
//    // 여행 보드 생성 또는 수정
//    public TravelBoardDTO createOrUpdateBoard(TravelBoardDTO boardDTO) {
//        TravelBoard board = convertToEntity(boardDTO);  // DTO -> 엔티티 변환
//        TravelBoard savedBoard = travelBoardRepository.save(board);
//        return convertToDto(savedBoard);  // 저장된 엔티티 -> DTO 변환
//    }
//
//    // 특정 여행 보드 수정
//    public TravelBoardDTO updateBoard(Integer travelIdx, TravelBoardDTO boardDTO) {
//        TravelBoard board = convertToEntity(boardDTO);  // DTO -> 엔티티 변환
//        board.setTravelIdx(travelIdx);  // 기존 게시판 ID 유지
//        TravelBoard updatedBoard = travelBoardRepository.save(board);
//        return convertToDto(updatedBoard);  // 엔티티 -> DTO 변환
//    }
//
//    // 특정 여행 보드 삭제
//    public void deleteBoardByTravelIdx(Integer travelIdx) {
//        travelBoardRepository.findByTravelIdx(travelIdx)
//                .ifPresent(board -> travelBoardRepository.deleteById(board.getTravelIdx()));
//    }
//
//    // 엔티티를 DTO로 변환
//    private TravelBoardDTO convertToDto(TravelBoard board) {
//        TravelBoardDTO dto = new TravelBoardDTO();
//        dto.setTravelIdx(board.getTravelIdx());
//        dto.setTitle(board.getTitle());
//        dto.setContent(board.getContent());
//        dto.setRegion(board.getRegion());
//        dto.setStatDate(board.getStatDate());
//        dto.setEndDate(board.getEndDate());
//        dto.setIsPublic(board.getIsPublic());
//        dto.setUserIdx(board.getUserIdx() != null ? board.getUserIdx().getUserIdx() : null);
//        return dto;
//    }
//
//    // DTO를 엔티티로 변환
//    private TravelBoard convertToEntity(TravelBoardDTO dto) {
//        TravelBoard board = new TravelBoard();
//        board.setTravelIdx(dto.getTravelIdx());  // travelIdx는 필요 시 설정
//        board.setTitle(dto.getTitle());
//        board.setContent(dto.getContent());
//        board.setRegion(dto.getRegion());
//        board.setStatDate(dto.getStatDate());
//        board.setEndDate(dto.getEndDate());
//        board.setIsPublic(dto.getIsPublic());
//        // userIdx는 Users 엔티티에서 따로 설정해야 할 수 있음 (생략)
//        return board;
//    }
//}


//package com.example._team.service;
//
//import com.example._team.domain.TravelBoard;
//import com.example._team.dto.TravelBoardDTO;
//import com.example._team.repository.TravelBoardRepository;
//import org.springframework.beans.factory.annotation.Autowired;
//import org.springframework.stereotype.Service;
//
//import java.util.List;
//import java.util.Optional;
//import java.util.stream.Collectors;
//
//@Service
//public class TravelBoardService {
//
//    @Autowired
//    private TravelBoardRepository travelBoardRepository;
//
//    // 모든 여행 보드 조회
//    public List<TravelBoardDTO> getAllBoards() {
//        return travelBoardRepository.findAll().stream()
//                .map(this::convertToDto)  // 엔티티 -> DTO 변환
//                .collect(Collectors.toList());
//    }
//
//    // 특정 여행 보드 조회 (ID로 식별)
//    public Optional<TravelBoardDTO> getBoardByTravelIdx(Integer travelIdx) {
//        return travelBoardRepository.findByTravelIdx(travelIdx)
//                .map(this::convertToDto);  // 엔티티 -> DTO 변환
//    }
//
//    // 여행 보드 생성 또는 수정
//    public TravelBoardDTO createOrUpdateBoard(TravelBoardDTO boardDTO) {
//        TravelBoard board = convertToEntity(boardDTO);  // DTO -> 엔티티 변환
//        TravelBoard savedBoard = travelBoardRepository.save(board);
//        return convertToDto(savedBoard);  // 저장된 엔티티 -> DTO 변환
//    }
//
//    // 특정 여행 보드 수정
//    public TravelBoardDTO updateBoard(Integer travelIdx, TravelBoardDTO boardDTO) {
//        TravelBoard board = convertToEntity(boardDTO);  // DTO -> 엔티티 변환
//        board.setTravelIdx(travelIdx);  // 기존 게시판 ID 유지
//        TravelBoard updatedBoard = travelBoardRepository.save(board);
//        return convertToDto(updatedBoard);  // 엔티티 -> DTO 변환
//    }
//
//    // 특정 여행 보드 삭제
//    public void deleteBoardByTravelIdx(Integer travelIdx) {
//        travelBoardRepository.findByTravelIdx(travelIdx)
//                .ifPresent(board -> travelBoardRepository.deleteById(board.getTravelIdx()));
//    }
//
//    // 엔티티를 DTO로 변환
//    private TravelBoardDTO convertToDto(TravelBoard board) {
//        TravelBoardDTO dto = new TravelBoardDTO();
//        dto.setTravelIdx(board.getTravelIdx());
//        dto.setTitle(board.getTitle());
//        dto.setContent(board.getContent());
//        dto.setRegion(board.getRegion());
//        dto.setStatDate(board.getStatDate());
//        dto.setEndDate(board.getEndDate());
//        dto.setIsPublic(board.getIsPublic());
//        dto.setUserIdx(board.getUserIdx().getUserIdx());
//        return dto;
//    }
//
//    // DTO를 엔티티로 변환
//    private TravelBoard convertToEntity(TravelBoardDTO dto) {
//        TravelBoard board = new TravelBoard();
//        board.setTitle(dto.getTitle());
//        board.setContent(dto.getContent());
//        board.setRegion(dto.getRegion());
//        board.setStatDate(dto.getStatDate());
//        board.setEndDate(dto.getEndDate());
//        board.setIsPublic(dto.getIsPublic());
//        // userIdx는 Users 엔티티에서 따로 설정해야 할 수 있음 (생략)
//        return board;
//    }
//}


//package com.example._team.service;
//
//import com.example._team.domain.TravelBoard;
//import com.example._team.dto.TravelBoardDTO;
//import com.example._team.repository.TravelBoardRepository;
//import org.springframework.beans.factory.annotation.Autowired;
//import org.springframework.stereotype.Service;
//
//import java.util.List;
//import java.util.Optional;
//import java.util.stream.Collectors;
//
//@Service
//public class TravelBoardService {
//
//    @Autowired
//    private TravelBoardRepository travelBoardRepository;
//
//    // 모든 여행 보드 조회
//    public List<TravelBoardDTO> getAllBoards() {
//        return travelBoardRepository.findAll().stream()
//                .map(this::convertToDto)  // 엔티티 -> DTO 변환
//                .collect(Collectors.toList());
//    }
//
//    // 특정 여행 보드 조회 (ID로 식별)
//    public Optional<TravelBoardDTO> getBoardByTravelIdx(Integer travelIdx) {
//        return travelBoardRepository.findByTravelIdx(travelIdx)
//                .map(this::convertToDto);  // 엔티티 -> DTO 변환
//    }
//
//    // 여행 보드 생성 또는 수정
//    public TravelBoardDTO createOrUpdateBoard(TravelBoardDTO boardDTO) {
//        TravelBoard board = convertToEntity(boardDTO);  // DTO -> 엔티티 변환
//        TravelBoard savedBoard = travelBoardRepository.save(board);
//        return convertToDto(savedBoard);  // 저장된 엔티티 -> DTO 변환
//    }
//
//    // 특정 여행 보드 수정
//    public TravelBoardDTO updateBoard(Integer travelIdx, TravelBoardDTO boardDTO) {
//        TravelBoard board = convertToEntity(boardDTO);  // DTO -> 엔티티 변환
//        board.setTravelIdx(travelIdx);  // 기존 게시판 ID 유지
//        TravelBoard updatedBoard = travelBoardRepository.save(board);
//        return convertToDto(updatedBoard);  // 엔티티 -> DTO 변환
//    }
//
//    // 특정 여행 보드 삭제
//    public void deleteBoardByTravelIdx(Integer travelIdx) {
//        travelBoardRepository.findByTravelIdx(travelIdx)
//                .ifPresent(board -> travelBoardRepository.deleteById(board.getTravelIdx()));
//    }
//
//    // 엔티티를 DTO로 변환
//    private TravelBoardDTO convertToDto(TravelBoard board) {
//        TravelBoardDTO dto = new TravelBoardDTO();
//        dto.setTravelIdx(board.getTravelIdx());
//        dto.setTitle(board.getTitle());
//        dto.setContent(board.getContent());
//        dto.setRegion(board.getRegion());
//        dto.setStatDate(board.getStatDate());
//        dto.setEndDate(board.getEndDate());
//        dto.setIsPublic(board.getIsPublic());
//        dto.setUserIdx(board.getUserIdx().getUserIdx());
//        dto.setLikesCount(board.getLikesCount());
//        return dto;
//    }
//
//    // DTO를 엔티티로 변환
//    private TravelBoard convertToEntity(TravelBoardDTO dto) {
//        TravelBoard board = new TravelBoard();
//        board.setTitle(dto.getTitle());
//        board.setContent(dto.getContent());
//        board.setRegion(dto.getRegion());
//        board.setStatDate(dto.getStatDate());
//        board.setEndDate(dto.getEndDate());
//        board.setIsPublic(dto.getIsPublic());
//        // userIdx는 Users 엔티티에서 따로 설정해야 할 수 있음 (생략)
//        return board;
//    }
//}


//package com.example._team.service;
//
//import com.example._team.domain.TravelBoard;
//import com.example._team.repository.TravelBoardRepository;
//import org.springframework.beans.factory.annotation.Autowired;
//import org.springframework.stereotype.Service;
//
//import java.util.List;
//import java.util.Optional;
//
//@Service
//public class TravelBoardService {
//
//    @Autowired
//    private TravelBoardRepository travelBoardRepository;
//
//    // 모든 여행 보드 조회
//    public List<TravelBoard> getAllBoards() {
//        return travelBoardRepository.findAll();  // DTO 변환 없이 엔티티 직접 반환
//    }
//
//    // 특정 여행 보드 조회 (ID로 식별)
//    public Optional<TravelBoard> getBoardByTravelIdx(Integer travelIdx) {
//        return travelBoardRepository.findByTravelIdx(travelIdx);  // DTO 변환 없이 엔티티 직접 반환
//    }
//
//    // 여행 보드 생성 또는 수정
//    public TravelBoard createOrUpdateBoard(TravelBoard board) {
//        return travelBoardRepository.save(board);  // 엔티티 직접 저장 및 반환
//    }
//
//    // 특정 여행 보드 수정
//    public TravelBoard updateBoard(Integer travelIdx, TravelBoard board) {
//        board.setTravelIdx(travelIdx);  // 기존 게시판 ID 유지
//        return travelBoardRepository.save(board);  // 엔티티 직접 수정 및 반환
//    }
//
//    // 특정 여행 보드 삭제
//    public void deleteBoardByTravelIdx(Integer travelIdx) {
//        travelBoardRepository.findByTravelIdx(travelIdx)
//                .ifPresent(board -> travelBoardRepository.deleteById(board.getTravelIdx()));
//    }
//}


//package com.example._team.service;
//
//import com.example._team.domain.TravelBoard;
//import com.example._team.dto.TravelBoardDTO;
//import com.example._team.repository.TravelBoardRepository;
//import org.springframework.beans.factory.annotation.Autowired;
//import org.springframework.stereotype.Service;
//
//import java.util.List;
//import java.util.Optional;
//import java.util.stream.Collectors;
//
//@Service
//public class TravelBoardService {
//
//    @Autowired
//    private TravelBoardRepository travelBoardRepository;
//
//    // 모든 여행 보드 조회
//    public List<TravelBoardDTO> getAllBoards() {
//        return travelBoardRepository.findAll().stream()
//                .map(this::convertToDto)  // 직접 변환
//                .collect(Collectors.toList());
//    }
//
//    // 특정 여행 보드 조회 (ID로 식별)
//    public Optional<TravelBoardDTO> getBoardByTravelIdx(Integer travelIdx) {
//        return travelBoardRepository.findByTravelIdx(travelIdx)
//                .map(this::convertToDto);  // 직접 변환
//    }
//
//    // 여행 보드 생성 또는 수정
//    public TravelBoardDTO createOrUpdateBoard(TravelBoardDTO boardDTO) {
//        TravelBoard board = convertToEntity(boardDTO);  // DTO를 엔티티로 변환
//        TravelBoard savedBoard = travelBoardRepository.save(board);
//        return convertToDto(savedBoard);  // 엔티티를 DTO로 변환
//    }
//
//    // 특정 여행 보드 수정
//    public TravelBoardDTO updateBoard(Integer travelIdx, TravelBoardDTO boardDTO) {
//        TravelBoard board = convertToEntity(boardDTO);  // DTO를 엔티티로 변환
//        board.setTravelIdx(travelIdx);  // 기존 게시판 ID 유지
//        TravelBoard updatedBoard = travelBoardRepository.save(board);
//        return convertToDto(updatedBoard);  // 엔티티를 DTO로 변환
//    }
//
//    // 특정 여행 보드 삭제
//    public void deleteBoardByTravelIdx(Integer travelIdx) {
//        travelBoardRepository.findByTravelIdx(travelIdx)
//                .ifPresent(board -> travelBoardRepository.deleteById(board.getTravelIdx()));
//    }
//
//    // 엔티티를 DTO로 변환
//    private TravelBoardDTO convertToDto(TravelBoard board) {
//        TravelBoardDTO dto = new TravelBoardDTO();
//        dto.setTravelIdx(board.getTravelIdx());
//        dto.setTitle(board.getTitle());
//        dto.setContent(board.getContent());
//        dto.setRegion(board.getRegion());
//        dto.setStatDate(board.getStatDate());
//        dto.setEndDate(board.getEndDate());
//        dto.setIsPublic(board.getIsPublic());
//        dto.setUserIdx(board.getUserIdx().getUserIdx());
//        dto.setLikesCount(board.getLikesCount());  // 좋아요 수 추가
//        return dto;
//    }
//
//    // DTO를 엔티티로 변환
//    private TravelBoard convertToEntity(TravelBoardDTO dto) {
//        TravelBoard board = new TravelBoard();
//        board.setTitle(dto.getTitle());
//        board.setContent(dto.getContent());
//        board.setRegion(dto.getRegion());
//        board.setStatDate(dto.getStatDate());
//        board.setEndDate(dto.getEndDate());
//        board.setIsPublic(dto.getIsPublic());
//        // userIdx와 likesCount는 필요에 따라 설정
//        return board;
//    }
//}


//package com.example._team.service;
//
//import com.example._team.domain.TravelBoard;
//import com.example._team.dto.TravelBoardDTO;
//import com.example._team.mapper.TravelBoardMapper;
//import com.example._team.repository.TravelBoardRepository;
//import org.springframework.beans.factory.annotation.Autowired;
//import org.springframework.stereotype.Service;
//
//import java.util.List;
//import java.util.Optional;
//import java.util.stream.Collectors;
//
//@Service
//public class TravelBoardService {
//
//    @Autowired
//    private TravelBoardRepository travelBoardRepository;
//
//    @Autowired
//    private TravelBoardMapper travelBoardMapper;
//
//    // 모든 여행 보드 조회
//    public List<TravelBoardDTO> getAllBoards() {
//        return travelBoardRepository.findAll().stream()
//                .map(travelBoardMapper::toDto)
//                .collect(Collectors.toList());
//    }
//
//    // 특정 여행 보드 조회 (ID로 식별)
//    public Optional<TravelBoardDTO> getBoardByTravelIdx(Integer travelIdx) {
//        return travelBoardRepository.findByTravelIdx(travelIdx)
//                .map(travelBoardMapper::toDto);
//    }
//
//    // 여행 보드 생성 또는 수정
//    public TravelBoardDTO createOrUpdateBoard(TravelBoardDTO boardDTO) {
//        TravelBoard board = travelBoardMapper.toEntity(boardDTO);
//        TravelBoard savedBoard = travelBoardRepository.save(board);
//        return travelBoardMapper.toDto(savedBoard);
//    }
//
//    // 특정 여행 보드 수정
//    public TravelBoardDTO updateBoard(Integer travelIdx, TravelBoardDTO boardDTO) {
//        TravelBoard board = travelBoardMapper.toEntity(boardDTO);
//        board.setTravelIdx(travelIdx);
//        TravelBoard updatedBoard = travelBoardRepository.save(board);
//        return travelBoardMapper.toDto(updatedBoard);
//    }
//
//    // 특정 여행 보드 삭제
//    public void deleteBoardByTravelIdx(Integer travelIdx) {
//        travelBoardRepository.findByTravelIdx(travelIdx)
//                .ifPresent(board -> travelBoardRepository.deleteById(board.getTravelIdx()));
//    }
//}



// 좋아요 추가 전 코드
//package com.example._team.service;
//
//import com.example._team.domain.TravelBoard;
//import com.example._team.dto.TravelBoardDTO;
//import com.example._team.mapper.TravelBoardMapper;
//import com.example._team.repository.TravelBoardRepository;
//import org.springframework.beans.factory.annotation.Autowired;
//import org.springframework.stereotype.Service;
//
//import java.util.List;
//import java.util.Optional;
//import java.util.stream.Collectors;
//
//@Service
//public class TravelBoardService {
//
//    @Autowired
//    private TravelBoardRepository travelBoardRepository;
//
//    @Autowired
//    private TravelBoardMapper travelBoardMapper;
//
//    // 모든 여행 보드 조회
//    public List<TravelBoardDTO> getAllBoards() {
//        return travelBoardRepository.findAll().stream()
//                .map(travelBoardMapper::toDto)
//                .collect(Collectors.toList());
//    }
//
//    // 특정 여행 보드 조회 (ID로 식별)
//    public Optional<TravelBoardDTO> getBoardByTravelIdx(Integer travelIdx) {
//        return travelBoardRepository.findByTravelIdx(travelIdx)
//                .map(travelBoardMapper::toDto);
//    }
//
//    // 여행 보드 생성 또는 수정
//    public TravelBoardDTO createOrUpdateBoard(TravelBoardDTO boardDTO) {
//        TravelBoard board = travelBoardMapper.toEntity(boardDTO);
//        TravelBoard savedBoard = travelBoardRepository.save(board);
//        return travelBoardMapper.toDto(savedBoard);
//    }
//
//    // 특정 여행 보드 수정
//    public TravelBoardDTO updateBoard(Integer travelIdx, TravelBoardDTO boardDTO) {
//        TravelBoard board = travelBoardMapper.toEntity(boardDTO);
//        board.setTravelIdx(travelIdx);
//        TravelBoard updatedBoard = travelBoardRepository.save(board);
//        return travelBoardMapper.toDto(updatedBoard);
//    }
//
//    // 특정 여행 보드 삭제
//    public void deleteBoardByTravelIdx(Integer travelIdx) {
//        travelBoardRepository.findByTravelIdx(travelIdx)
//                .ifPresent(board -> travelBoardRepository.deleteById(board.getTravelIdx()));
//    }
//}


// dto, mapper 추가 전 코드
//package com.example._team.service;
//
//import com.example._team.domain.TravelBoard;
//import com.example._team.repository.TravelBoardRepository;
//import org.springframework.beans.factory.annotation.Autowired;
//import org.springframework.stereotype.Service;
//
//import java.util.List;
//import java.util.Optional;
//
//@Service
//public class TravelBoardService {
//
//    @Autowired
//    private TravelBoardRepository travelBoardRepository;
//
//    // 모든 여행 보드 조회
//    public List<TravelBoard> getAllBoards() {
//        return travelBoardRepository.findAll();
//    }
//
//    // 특정 여행 보드 조회 (ID로 식별)
//    public Optional<TravelBoard> getBoardByTravelIdx(Integer travelIdx) {
//        return travelBoardRepository.findByTravelIdx(travelIdx);
//    }
//
//    // 여행 보드 생성 또는 수정
//    public TravelBoard createOrUpdateBoard(TravelBoard board) {
//        return travelBoardRepository.save(board);
//    }
//
//    // 특정 여행 보드 삭제
//    public void deleteBoardByTravelIdx(Integer travelIdx) {
//        travelBoardRepository.findByTravelIdx(travelIdx)
//            .ifPresent(board -> travelBoardRepository.deleteById(board.getTravelIdx()));
//    }
//}


// 주석 설명 전 코드
//package com.example._team.service;
//
//import com.example._team.domain.TravelBoard;
//import com.example._team.repository.TravelBoardRepository;
//import org.springframework.beans.factory.annotation.Autowired;
//import org.springframework.stereotype.Service;
//
//import java.util.List;
//import java.util.Optional;
//
//@Service
//public class TravelBoardService {
//
//    @Autowired
//    private TravelBoardRepository travelBoardRepository;
//
//    public List<TravelBoard> getAllBoards() {
//        return travelBoardRepository.findAll();
//    }
//
//    public Optional<TravelBoard> getBoardByTravelIdx(Integer travelIdx) {
//        return travelBoardRepository.findByTravelIdx(travelIdx);
//    }
//
//    public TravelBoard createOrUpdateBoard(TravelBoard board) {
//        return travelBoardRepository.save(board);
//    }
//
//    public void deleteBoardByTravelIdx(Integer travelIdx) {
//        travelBoardRepository.findByTravelIdx(travelIdx)
//            .ifPresent(board -> travelBoardRepository.deleteById(board.getTravelIdx()));
//    }
//}

// service 합치기 전 코드
//package com.example._team.service;
//
//import com.example._team.domain.TravelBoard;
//import com.example._team.repository.TravelBoardRepository;
//import org.springframework.beans.factory.annotation.Autowired;
//import org.springframework.stereotype.Service;
//
//import java.util.List;
//import java.util.Optional;
//
//@Service
//public class TravelBoardService {
//
//    @Autowired
//    private TravelBoardRepository travelBoardRepository;
//
//    public List<TravelBoard> getAllBoards() {
//        return travelBoardRepository.findAll();
//    }
//
//    public Optional<TravelBoard> getBoardByTravelIdx(Integer travelIdx) {
//        return travelBoardRepository.findByTravelIdx(travelIdx);
//    }
//
//    public TravelBoard createOrUpdateBoard(TravelBoard board) {
//        return travelBoardRepository.save(board);
//    }
//
//    public void deleteBoardByTravelIdx(Integer travelIdx) {
//        travelBoardRepository.findByTravelIdx(travelIdx)
//            .ifPresent(board -> travelBoardRepository.deleteById(board.getTravelIdx()));
//    }
//}


//package com.example._team.service;
//
//import com.example._team.domain.TravelBoard;
//import com.example._team.repository.TravelBoardRepository;
//import org.springframework.beans.factory.annotation.Autowired;
//import org.springframework.stereotype.Service;
//
//import java.util.List;
//import java.util.Optional;
//
//@Service
//public class TravelBoardService {
//
//    @Autowired
//    private TravelBoardRepository travelBoardRepository;
//
//    // 모든 여행 보드 조회
//    public List<TravelBoard> getAllBoards() {
//        return travelBoardRepository.findAll();
//    }
//
//    // travelIdx로 여행 보드 조회
//    public Optional<TravelBoard> getBoardByTravelIdx(Integer travelIdx) {
//        return travelBoardRepository.findByTravelIdx(travelIdx);
//    }
//
//    // 여행 보드 생성 또는 수정
//    public TravelBoard createOrUpdateBoard(TravelBoard board) {
//        return travelBoardRepository.save(board);
//    }
//
//    // travelIdx로 여행 보드 삭제
//    public void deleteBoardByTravelIdx(Integer travelIdx) {
//        travelBoardRepository.findByTravelIdx(travelIdx)
//            .ifPresent(board -> travelBoardRepository.deleteById(board.getTravelIdx()));
//    }
//}
