package com.example._team.dto;

import com.example._team.domain.enums.Region;
import lombok.AllArgsConstructor;
import lombok.Data;
import lombok.NoArgsConstructor;

import java.time.LocalDateTime;

@Data
@AllArgsConstructor
@NoArgsConstructor
public class TravelBoardResponseDto {
    private Integer travelIdx;
    private String title;
    private String content;
    private Region region;
    private LocalDateTime statDate;
    private LocalDateTime endDate;
    private Integer isPublic;
    private Integer userIdx;
}


//package com.example._team.dto;
//
//import java.time.LocalDateTime;
//
//import com.example._team.domain.TravelBoard;
//import com.example._team.domain.enums.Region;
//
//import lombok.AllArgsConstructor;
//import lombok.Builder;
//import lombok.Getter;
//import lombok.NoArgsConstructor;
//
//@Getter
//@NoArgsConstructor
//@AllArgsConstructor
//@Builder
//public class TravelBoardResponseDto {
//
//    private Integer travelIdx;
//    private String title;
//    private String content;
//    private Region region;
//    private LocalDateTime statDate;
//    private LocalDateTime endDate;
//    private Integer isPublic;
//    private Integer userIdx; // Use Integer instead of Long
//
//    // Static method to convert from entity to DTO
//    public static TravelBoardResponseDto fromEntity(TravelBoard travelBoard) {
//        return TravelBoardResponseDto.builder()
//                .travelIdx(travelBoard.getTravelIdx())
//                .title(travelBoard.getTitle())
//                .content(travelBoard.getContent())
//                .region(travelBoard.getRegion())
//                .statDate(travelBoard.getStatDate())
//                .endDate(travelBoard.getEndDate())
//                .isPublic(travelBoard.getIsPublic())
//                .userIdx(travelBoard.getUserIdx() != null ? travelBoard.getUserIdx().getUserIdx() : null) // Corrected method to get ID
//                .build();
//    }
//}
