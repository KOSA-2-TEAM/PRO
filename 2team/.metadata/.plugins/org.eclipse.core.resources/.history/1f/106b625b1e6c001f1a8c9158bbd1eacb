package com.example._team.controller;

import java.util.List;

import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.example._team.dto.TravelBoardRequestDto;
import com.example._team.dto.TravelBoardResponseDto;
import com.example._team.exception.DataNotFoundException;
import com.example._team.service.TravelBoardService;

import lombok.RequiredArgsConstructor;

@RestController
@RequiredArgsConstructor
@RequestMapping("/api/travel-boards")
public class TravelBoardController {

    private final TravelBoardService travelBoardService;

    // 여행 보드 저장
    @PostMapping
    public ResponseEntity<String> saveTravelBoard(@RequestBody TravelBoardRequestDto travelBoardRequestDto) {
        try {
            travelBoardService.saveTravelBoard(travelBoardRequestDto);
            return new ResponseEntity<>("Travel board saved successfully", HttpStatus.CREATED);
        } catch (DataNotFoundException e) {
            return new ResponseEntity<>("Failed to save travel board", HttpStatus.INTERNAL_SERVER_ERROR);
        }
    }

    // 여행 보드 업데이트
    @PutMapping("/{id}")
    public ResponseEntity<String> updateTravelBoard(@PathVariable Integer id, @RequestBody TravelBoardRequestDto travelBoardRequestDto) {
        try {
            travelBoardService.update(id, travelBoardRequestDto);
            return new ResponseEntity<>("Travel board updated successfully", HttpStatus.OK);
        } catch (DataNotFoundException e) {
            return new ResponseEntity<>("Failed to update travel board", HttpStatus.NOT_FOUND);
        }
    }

    // 여행 보드 삭제
    @DeleteMapping("/{id}")
    public ResponseEntity<String> deleteTravelBoard(@PathVariable Integer id) {
        try {
            travelBoardService.deleteTravelBoard(id);
            return new ResponseEntity<>("Travel board deleted successfully", HttpStatus.NO_CONTENT);
        } catch (DataNotFoundException e) {
            return new ResponseEntity<>("Failed to delete travel board", HttpStatus.NOT_FOUND);
        }
    }

    // 여행 보드 상세 조회
    @GetMapping("/{id}")
    public ResponseEntity<TravelBoardResponseDto> getTravelBoard(@PathVariable Integer id) {
        try {
            TravelBoardResponseDto travelBoard = travelBoardService.getTravelBoard(id);
            return new ResponseEntity<>(travelBoard, HttpStatus.OK);
        } catch (DataNotFoundException e) {
            return new ResponseEntity<>(HttpStatus.NOT_FOUND);
        }
    }

    // 여행 보드 목록 조회
    @GetMapping
    public ResponseEntity<List<TravelBoardResponseDto>> getTravelBoardList() {
        List<TravelBoardResponseDto> travelBoards = travelBoardService.getTravelBoardList();
        return new ResponseEntity<>(travelBoards, HttpStatus.OK);
    }
}
