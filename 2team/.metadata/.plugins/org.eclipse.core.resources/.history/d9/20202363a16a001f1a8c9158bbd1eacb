package com.example._team.service;

import com.example._team.domain.TravelBoard;
import com.example._team.domain.TravelLikes;
import com.example._team.dto.TravelBoardDTO;
import com.example._team.mapper.TravelBoardMapper;
import com.example._team.repository.TravelBoardRepository;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import java.util.List;
import java.util.Optional;
import java.util.stream.Collectors;

@Service
public class TravelBoardService {

    @Autowired
    private TravelBoardRepository travelBoardRepository;

    @Autowired
    private TravelBoardMapper travelBoardMapper;

    // 모든 여행 보드 조회
    public List<TravelBoardDTO> getAllBoards() {
        return travelBoardRepository.findAll().stream()
                .map(travelBoardMapper::toDto)
                .collect(Collectors.toList());
    }

    // 특정 여행 보드 조회 (ID로 식별)
    public Optional<TravelBoardDTO> getBoardByTravelIdx(Integer travelIdx) {
        Optional<TravelBoard> board = travelBoardRepository.findByTravelIdx(travelIdx);
        if (board.isPresent()) {
            List<TravelLikes> likes = travelBoardRepository.findLikesByTravelIdx(travelIdx);
            TravelBoardDTO dto = travelBoardMapper.toDto(board.get());
            dto.setLikes(likes.size()); // 좋아요 수를 DTO에 추가
            return Optional.of(dto);
        } else {
            return Optional.empty();
        }
    }

    // 여행 보드 생성 또는 수정
    public TravelBoardDTO createOrUpdateBoard(TravelBoardDTO boardDTO) {
        TravelBoard board = travelBoardMapper.toEntity(boardDTO);
        TravelBoard savedBoard = travelBoardRepository.save(board);
        return travelBoardMapper.toDto(savedBoard);
    }

    // 특정 여행 보드 수정
    public TravelBoardDTO updateBoard(Integer travelIdx, TravelBoardDTO boardDTO) {
        TravelBoard board = travelBoardMapper.toEntity(boardDTO);
        board.setTravelIdx(travelIdx);
        TravelBoard updatedBoard = travelBoardRepository.save(board);
        return travelBoardMapper.toDto(updatedBoard);
    }

    // 특정 여행 보드 삭제
    public void deleteBoardByTravelIdx(Integer travelIdx) {
        travelBoardRepository.findByTravelIdx(travelIdx)
                .ifPresent(board -> travelBoardRepository.deleteById(board.getTravelIdx()));
    }
}


// 좋아요 추가 전 코드
//package com.example._team.service;
//
//import com.example._team.domain.TravelBoard;
//import com.example._team.dto.TravelBoardDTO;
//import com.example._team.mapper.TravelBoardMapper;
//import com.example._team.repository.TravelBoardRepository;
//import org.springframework.beans.factory.annotation.Autowired;
//import org.springframework.stereotype.Service;
//
//import java.util.List;
//import java.util.Optional;
//import java.util.stream.Collectors;
//
//@Service
//public class TravelBoardService {
//
//    @Autowired
//    private TravelBoardRepository travelBoardRepository;
//
//    @Autowired
//    private TravelBoardMapper travelBoardMapper;
//
//    // 모든 여행 보드 조회
//    public List<TravelBoardDTO> getAllBoards() {
//        return travelBoardRepository.findAll().stream()
//                .map(travelBoardMapper::toDto)
//                .collect(Collectors.toList());
//    }
//
//    // 특정 여행 보드 조회 (ID로 식별)
//    public Optional<TravelBoardDTO> getBoardByTravelIdx(Integer travelIdx) {
//        return travelBoardRepository.findByTravelIdx(travelIdx)
//                .map(travelBoardMapper::toDto);
//    }
//
//    // 여행 보드 생성 또는 수정
//    public TravelBoardDTO createOrUpdateBoard(TravelBoardDTO boardDTO) {
//        TravelBoard board = travelBoardMapper.toEntity(boardDTO);
//        TravelBoard savedBoard = travelBoardRepository.save(board);
//        return travelBoardMapper.toDto(savedBoard);
//    }
//
//    // 특정 여행 보드 수정
//    public TravelBoardDTO updateBoard(Integer travelIdx, TravelBoardDTO boardDTO) {
//        TravelBoard board = travelBoardMapper.toEntity(boardDTO);
//        board.setTravelIdx(travelIdx);
//        TravelBoard updatedBoard = travelBoardRepository.save(board);
//        return travelBoardMapper.toDto(updatedBoard);
//    }
//
//    // 특정 여행 보드 삭제
//    public void deleteBoardByTravelIdx(Integer travelIdx) {
//        travelBoardRepository.findByTravelIdx(travelIdx)
//                .ifPresent(board -> travelBoardRepository.deleteById(board.getTravelIdx()));
//    }
//}


// dto, mapper 추가 전 코드
//package com.example._team.service;
//
//import com.example._team.domain.TravelBoard;
//import com.example._team.repository.TravelBoardRepository;
//import org.springframework.beans.factory.annotation.Autowired;
//import org.springframework.stereotype.Service;
//
//import java.util.List;
//import java.util.Optional;
//
//@Service
//public class TravelBoardService {
//
//    @Autowired
//    private TravelBoardRepository travelBoardRepository;
//
//    // 모든 여행 보드 조회
//    public List<TravelBoard> getAllBoards() {
//        return travelBoardRepository.findAll();
//    }
//
//    // 특정 여행 보드 조회 (ID로 식별)
//    public Optional<TravelBoard> getBoardByTravelIdx(Integer travelIdx) {
//        return travelBoardRepository.findByTravelIdx(travelIdx);
//    }
//
//    // 여행 보드 생성 또는 수정
//    public TravelBoard createOrUpdateBoard(TravelBoard board) {
//        return travelBoardRepository.save(board);
//    }
//
//    // 특정 여행 보드 삭제
//    public void deleteBoardByTravelIdx(Integer travelIdx) {
//        travelBoardRepository.findByTravelIdx(travelIdx)
//            .ifPresent(board -> travelBoardRepository.deleteById(board.getTravelIdx()));
//    }
//}


// 주석 설명 전 코드
//package com.example._team.service;
//
//import com.example._team.domain.TravelBoard;
//import com.example._team.repository.TravelBoardRepository;
//import org.springframework.beans.factory.annotation.Autowired;
//import org.springframework.stereotype.Service;
//
//import java.util.List;
//import java.util.Optional;
//
//@Service
//public class TravelBoardService {
//
//    @Autowired
//    private TravelBoardRepository travelBoardRepository;
//
//    public List<TravelBoard> getAllBoards() {
//        return travelBoardRepository.findAll();
//    }
//
//    public Optional<TravelBoard> getBoardByTravelIdx(Integer travelIdx) {
//        return travelBoardRepository.findByTravelIdx(travelIdx);
//    }
//
//    public TravelBoard createOrUpdateBoard(TravelBoard board) {
//        return travelBoardRepository.save(board);
//    }
//
//    public void deleteBoardByTravelIdx(Integer travelIdx) {
//        travelBoardRepository.findByTravelIdx(travelIdx)
//            .ifPresent(board -> travelBoardRepository.deleteById(board.getTravelIdx()));
//    }
//}

// service 합치기 전 코드
//package com.example._team.service;
//
//import com.example._team.domain.TravelBoard;
//import com.example._team.repository.TravelBoardRepository;
//import org.springframework.beans.factory.annotation.Autowired;
//import org.springframework.stereotype.Service;
//
//import java.util.List;
//import java.util.Optional;
//
//@Service
//public class TravelBoardService {
//
//    @Autowired
//    private TravelBoardRepository travelBoardRepository;
//
//    public List<TravelBoard> getAllBoards() {
//        return travelBoardRepository.findAll();
//    }
//
//    public Optional<TravelBoard> getBoardByTravelIdx(Integer travelIdx) {
//        return travelBoardRepository.findByTravelIdx(travelIdx);
//    }
//
//    public TravelBoard createOrUpdateBoard(TravelBoard board) {
//        return travelBoardRepository.save(board);
//    }
//
//    public void deleteBoardByTravelIdx(Integer travelIdx) {
//        travelBoardRepository.findByTravelIdx(travelIdx)
//            .ifPresent(board -> travelBoardRepository.deleteById(board.getTravelIdx()));
//    }
//}


//package com.example._team.service;
//
//import com.example._team.domain.TravelBoard;
//import com.example._team.repository.TravelBoardRepository;
//import org.springframework.beans.factory.annotation.Autowired;
//import org.springframework.stereotype.Service;
//
//import java.util.List;
//import java.util.Optional;
//
//@Service
//public class TravelBoardService {
//
//    @Autowired
//    private TravelBoardRepository travelBoardRepository;
//
//    // 모든 여행 보드 조회
//    public List<TravelBoard> getAllBoards() {
//        return travelBoardRepository.findAll();
//    }
//
//    // travelIdx로 여행 보드 조회
//    public Optional<TravelBoard> getBoardByTravelIdx(Integer travelIdx) {
//        return travelBoardRepository.findByTravelIdx(travelIdx);
//    }
//
//    // 여행 보드 생성 또는 수정
//    public TravelBoard createOrUpdateBoard(TravelBoard board) {
//        return travelBoardRepository.save(board);
//    }
//
//    // travelIdx로 여행 보드 삭제
//    public void deleteBoardByTravelIdx(Integer travelIdx) {
//        travelBoardRepository.findByTravelIdx(travelIdx)
//            .ifPresent(board -> travelBoardRepository.deleteById(board.getTravelIdx()));
//    }
//}
